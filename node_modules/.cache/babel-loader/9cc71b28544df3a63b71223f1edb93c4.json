{"ast":null,"code":"var _jsxFileName = \"/home/sam/react/React-cource-SamuilovAD/src/components/TodoApp/TodoApp.js\";\nimport React, { Component } from 'react';\nimport AppHeader from \"../AppHeader\";\nimport SearchPanel from \"../SearchPanel\";\nimport TodoList from \"../TodoList\";\nimport './TodoApp.css';\nimport ItemStatusFilter from \"../ItemStatusFilter\";\nimport ItemAddForm from \"../ItemAddForm\";\n\nclass TodoListApp extends Component {\n  constructor(...args) {\n    super(...args);\n    this.maxId = 100;\n\n    this.createNewItem = label => {\n      return {\n        label: label,\n        important: false,\n        isDone: false,\n        id: ++this.maxId\n      };\n    };\n\n    this.state = {\n      todoData: [this.createNewItem('Drink coffee'), this.createNewItem('Work hard')],\n      term: '',\n      filter: 'done'\n    };\n\n    this.deleteItem = id => {\n      this.setState(({\n        todoData\n      }) => {\n        const idx = todoData.findIndex(el => el.id === id);\n        let newTodoData = [...todoData].filter((element, index) => index !== idx);\n        return {\n          todoData: newTodoData\n        };\n      });\n    };\n\n    this.addItem = text => {\n      const newItem = this.createNewItem(text);\n      this.setState(({\n        todoData\n      }) => {\n        let newTodoData = [...todoData, newItem];\n        return {\n          todoData: newTodoData\n        };\n      });\n    };\n\n    this.toggleProperty = (arr, id, property) => {\n      const idx = arr.findIndex(el => el.id === id);\n      let arrItem = arr[idx];\n      let newArrItem = { ...arrItem,\n        [property]: !arrItem[property]\n      };\n      arr = [...arr.slice(0, idx), newArrItem, ...arr.slice(idx + 1)];\n      return arr;\n    };\n\n    this.toggleDone = id => {\n      this.setState(({\n        todoData\n      }) => {\n        return {\n          todoData: this.toggleProperty([...todoData], id, 'isDone')\n        };\n      });\n    };\n\n    this.toggleImportant = id => {\n      this.setState(({\n        todoData\n      }) => {\n        return {\n          todoData: this.toggleProperty([...todoData], id, 'important')\n        };\n      });\n    };\n\n    this.onSearchChange = term => {\n      this.setState({\n        term\n      });\n    };\n  }\n\n  search(visibleItems, term) {\n    if (term.length === 0) {\n      return visibleItems;\n    }\n\n    return visibleItems.filter(item => {\n      return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\n    });\n  }\n\n  filterItems(items, filter) {\n    switch (filter) {\n      case 'all':\n        return items;\n\n      case 'done':\n        return items.filter(item => item.isDone === false);\n\n      case 'active':\n        return items.filter(item => item.isDone === true);\n\n      default:\n        return items;\n    }\n  }\n\n  render() {\n    const {\n      todoData,\n      term,\n      filter\n    } = this.state;\n    const visibleItems = this.filterItems(this.search(todoData, term), filter);\n    const doneCount = this.state.todoData.filter(el => el.isDone).length;\n    const todoCount = this.state.todoData.filter(el => !el.isDone).length;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"todo-app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AppHeader, {\n      toDo: todoCount,\n      done: doneCount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"top-panel d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SearchPanel, {\n      onSearchChange: this.onSearchChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(ItemStatusFilter, {\n      filter: \"all\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(TodoList, {\n      todos: visibleItems,\n      onDeleted: this.deleteItem,\n      onToggleDone: this.toggleDone,\n      onToggleImportant: this.toggleImportant,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ItemAddForm, {\n      onItemAdded: this.addItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default TodoListApp;","map":{"version":3,"sources":["/home/sam/react/React-cource-SamuilovAD/src/components/TodoApp/TodoApp.js"],"names":["React","Component","AppHeader","SearchPanel","TodoList","ItemStatusFilter","ItemAddForm","TodoListApp","maxId","createNewItem","label","important","isDone","id","state","todoData","term","filter","deleteItem","setState","idx","findIndex","el","newTodoData","element","index","addItem","text","newItem","toggleProperty","arr","property","arrItem","newArrItem","slice","toggleDone","toggleImportant","onSearchChange","search","visibleItems","length","item","toLowerCase","indexOf","filterItems","items","render","doneCount","todoCount"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport AppHeader from \"../AppHeader\";\nimport SearchPanel from \"../SearchPanel\";\nimport TodoList from \"../TodoList\";\nimport './TodoApp.css';\nimport ItemStatusFilter from \"../ItemStatusFilter\";\nimport ItemAddForm from \"../ItemAddForm\";\n\nclass TodoListApp extends Component\n{\n    maxId = 100;\n    createNewItem = (label) => {\n        return {\n            label: label,\n            important: false,\n            isDone: false,\n            id: ++this.maxId\n        };\n    };\n    state = {\n        todoData: [\n            this.createNewItem('Drink coffee'),\n            this.createNewItem('Work hard')\n        ],\n        term: '',\n        filter:'done'\n    };\n\n    deleteItem = (id) => {\n        this.setState(({todoData}) => {\n            const idx = todoData.findIndex((el) => el.id === id);\n            let newTodoData = [...todoData].filter((element, index) => index !== idx);\n            return {\n              todoData: newTodoData\n            };\n        });\n    };\n\n    addItem = (text) => {\n        const newItem = this.createNewItem(text);\n\n        this.setState(({todoData}) => {\n            let newTodoData = [...todoData, newItem];\n            return {\n                todoData: newTodoData\n            };\n        });\n    };\n    toggleProperty = (arr, id,property) => {\n        const idx = arr.findIndex((el) => el.id === id);\n        let arrItem = arr[idx];\n        let newArrItem = {...arrItem,[property]: !arrItem[property]};\n        arr = [\n            ...arr.slice(0,idx),\n            newArrItem,\n            ...arr.slice(idx + 1),\n        ];\n        return arr;\n    };\n\n    toggleDone = (id) => {\n        this.setState(({todoData}) => {\n            return {\n                todoData: this.toggleProperty([...todoData],id,'isDone')\n            };\n        });\n    };\n\n    toggleImportant = (id) => {\n        this.setState(({todoData}) => {\n            return {\n                todoData: this.toggleProperty([...todoData],id,'important')\n            };\n        });\n    };\n\n    search(visibleItems, term) {\n        if(term.length === 0){\n            return visibleItems;\n        }\n        return visibleItems.filter((item) => {\n            return item.label.toLowerCase().indexOf(term.toLowerCase())>-1;\n        });\n    };\n\n    filterItems(items, filter){\n        switch(filter){\n            case 'all':\n                return items;\n            case 'done':\n                return items.filter((item) => item.isDone ===false);\n            case 'active':\n                return items.filter((item) => item.isDone ===true);\n            default:\n                return items;\n        }\n    }\n\n    onSearchChange = (term) => {\n        this.setState({term});\n    };\n\n    render() {\n        const {todoData, term,filter} = this.state;\n        const visibleItems = this.filterItems(this.search(todoData, term),filter);\n        const doneCount = this.state.todoData.filter((el)=>el.isDone).length;\n        const todoCount = this.state.todoData.filter((el)=>!el.isDone).length;\n        return (\n            <div className=\"todo-app\">\n                <AppHeader toDo={todoCount} done={doneCount}/>\n                <div className=\"top-panel d-flex\">\n                    <SearchPanel onSearchChange={this.onSearchChange}/>\n                    <ItemStatusFilter filter=\"all\"/>\n                </div>\n                <TodoList\n                    todos={visibleItems}\n                    onDeleted={this.deleteItem}\n                    onToggleDone={this.toggleDone}\n                    onToggleImportant={this.toggleImportant}\n                />\n                <ItemAddForm onItemAdded = {this.addItem}/>\n            </div>);\n    };\n}\n\nexport default TodoListApp;\n"]},"metadata":{},"sourceType":"module"}